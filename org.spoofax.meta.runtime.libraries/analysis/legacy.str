module analysis/legacy

imports
	
	analysis/core
	analysis/save
	analysis/complete
	analysis/resolve
	editor/eclipse
	editor/queue
	nabl/collect
	task/messages
	
rules // Interface
	
	analysis-single-default-interface = fail
	analysis-multiple-default-interface = fail
	
	constraint-error = fail
	constraint-warning = fail
	constraint-note = fail
	
rules // Analysis
	
	analysis-default-editor = 
		(where(is-tuple); analysis-single-default-interface) <+ 
		queue-strategy(|"analysis-multiple-default-interface", "Analyzing files (legacy)")
	analysis-default-cmd = 
		analysis-multiple-default-interface
	analysis-cmd = 
		analysis-multiple-default-interface
		
	// Called by only by Spoofax.
	analysis-single-default(pre-trans, post-trans, pp-message|language) = 
		analysis-single-default(pre-trans, nabl-collect, post-trans, pp-message|language)
	analysis-single-default(pre-trans, collector, post-trans, pp-message|language) = 
		analysis-files-spoofax(fail, pre-trans, post-trans, pp-message|language, <project-path>)
	
	// Called by Spoofax and Sunshine, let analysis-top choose the correct strategy based on input.
	analysis-multiple-default(parse-file, pre-trans, post-trans, pp-message|language, project-path) = 
		analysis-top(parse-file, pre-trans, nabl-collect, post-trans, pp-message|language, project-path)
	analysis-multiple-default(parse-file, pre-trans, collector, post-trans, pp-message|language, project-path) = 
		analysis-top(parse-file, pre-trans, post-trans, pp-message|language, project-path)
	
rules // Other services
	
	analysis-save-default(|language) = analysis-spoofax-save(|language)
	analysis-propose-completions(|language, project-path, path) = analysis-propose-completions(|language, project-path)
	analysis-resolve(|language, project-path, path) = analysis-resolve(|language, project-path)

rules // Messages
	
	analysis-collect-legacy-messages(|source) =
	  where(collect-all(constraint-error; analysis-legacy-convert-error(|source)))
	; where(collect-all(constraint-warning; analysis-legacy-convert-warning(|source)))
	; where(collect-all(constraint-note; analysis-legacy-convert-note(|source)))

	analysis-legacy-convert-error(|source):
		(term, message) -> <task-create-error(|source, message)> term
		
	analysis-legacy-convert-warning(|source):
		(term, message) -> <task-create-warning(|source, message)> term
		
	analysis-legacy-convert-note(|source):
		(term, message) -> <task-create-note(|source, message)> term
